{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState, useEffect } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function useEmployees() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading: isFetching\n  } = useCustomFetch();\n  const [employees, setEmployees] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchAll = useCallback(async () => {\n    setLoading(true);\n    const employeesData = await fetchWithCache(\"employees\");\n    setEmployees(employeesData);\n    setLoading(false);\n  }, [fetchWithCache]);\n  const invalidateData = useCallback(() => {\n    setEmployees(null);\n  }, []);\n  useEffect(() => {\n    if (employees === null && !isFetching) {\n      fetchAll();\n    }\n  }, [employees, isFetching, fetchAll]);\n  return {\n    data: employees,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(useEmployees, \"NX6eaWj62zmal5u/v0/HF0Db6nY=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useEffect","useCustomFetch","useEmployees","fetchWithCache","loading","isFetching","employees","setEmployees","setLoading","fetchAll","employeesData","invalidateData","data"],"sources":["/Users/varshithkola/Desktop/ramp-fe-challenge/src/hooks/useEmployees.ts"],"sourcesContent":["import { useCallback, useState, useEffect } from \"react\";\nimport { Employee } from \"../utils/types\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nimport { EmployeeResult } from \"./types\";\n\nexport function useEmployees(): EmployeeResult {\n  const { fetchWithCache, loading: isFetching } = useCustomFetch();\n  const [employees, setEmployees] = useState<Employee[] | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchAll = useCallback(async () => {\n    setLoading(true);\n    const employeesData = await fetchWithCache<Employee[], object>(\"employees\");\n    setEmployees(employeesData);\n    setLoading(false);\n  }, [fetchWithCache]);\n\n  const invalidateData = useCallback(() => {\n    setEmployees(null);\n  }, []);\n\n  useEffect(() => {\n    if (employees === null && !isFetching) {\n      fetchAll();\n    }\n  }, [employees, isFetching, fetchAll]);\n\n  return { data: employees, loading, fetchAll, invalidateData };\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AAGA,OAAO,SAASC,YAAT,GAAwC;EAAA;;EAC7C,MAAM;IAAEC,cAAF;IAAkBC,OAAO,EAAEC;EAA3B,IAA0CJ,cAAc,EAA9D;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAoB,IAApB,CAA1C;EACA,MAAM,CAACK,OAAD,EAAUI,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;EAEA,MAAMU,QAAQ,GAAGX,WAAW,CAAC,YAAY;IACvCU,UAAU,CAAC,IAAD,CAAV;IACA,MAAME,aAAa,GAAG,MAAMP,cAAc,CAAqB,WAArB,CAA1C;IACAI,YAAY,CAACG,aAAD,CAAZ;IACAF,UAAU,CAAC,KAAD,CAAV;EACD,CAL2B,EAKzB,CAACL,cAAD,CALyB,CAA5B;EAOA,MAAMQ,cAAc,GAAGb,WAAW,CAAC,MAAM;IACvCS,YAAY,CAAC,IAAD,CAAZ;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIAP,SAAS,CAAC,MAAM;IACd,IAAIM,SAAS,KAAK,IAAd,IAAsB,CAACD,UAA3B,EAAuC;MACrCI,QAAQ;IACT;EACF,CAJQ,EAIN,CAACH,SAAD,EAAYD,UAAZ,EAAwBI,QAAxB,CAJM,CAAT;EAMA,OAAO;IAAEG,IAAI,EAAEN,SAAR;IAAmBF,OAAnB;IAA4BK,QAA5B;IAAsCE;EAAtC,CAAP;AACD;;GAvBeT,Y;UACkCD,c"},"metadata":{},"sourceType":"module"}